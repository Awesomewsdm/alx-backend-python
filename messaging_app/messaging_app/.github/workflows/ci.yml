name: CI - Django tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: messaging_db
          MYSQL_USER: django
          MYSQL_PASSWORD: django
        ports:
          - 3306:3306
        options: >-
          --health-cmd='mysqladmin ping -h localhost -P 3306 -u root -proot'
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y default-libmysqlclient-dev build-essential

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..30}; do
            if mysqladmin ping -h 127.0.0.1 -P 3306 -u root -proot > /dev/null 2>&1; then
              echo "MySQL is up"
              break
            fi
            echo "Waiting for MySQL... ($i)"
            sleep 2
          done

      - name: Install Python dependencies
        working-directory: messaging_app
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest pytest-cov mysqlclient

      - name: Run migrations
        working-directory: messaging_app
        env:
          DB_HOST: 127.0.0.1
          DB_NAME: messaging_db
          DB_USER: django
          DB_PASSWORD: django
          DB_PORT: 3306
        run: |
          python manage.py migrate --noinput

      - name: Run tests with pytest
        working-directory: messaging_app
        env:
          DB_HOST: 127.0.0.1
          DB_NAME: messaging_db
          DB_USER: django
          DB_PASSWORD: django
          DB_PORT: 3306
          DJANGO_SETTINGS_MODULE: messaging_app.settings
        run: |
          pytest -q --maxfail=1

      - name: Upload pytest results (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-report
          path: messaging_app/**/reports || .
